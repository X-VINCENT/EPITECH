#!/usr/bin/env python3

from sys import argv
from math import sqrt, pow, degrees, acos

def print_help():
    print("USAGE")
    print("    ./101pong x0 y0 z0 x1 y1 z1 n\n")
    print("DESCRIPTION")
    print("    x0 ball abscissa at time t - 1")
    print("    y0 ball ordinate at time t - 1")
    print("    z0 ball altitude at time t - 1")
    print("    x1 ball abscissa at time t")
    print("    y1 ball ordinate at time t")
    print("    z1 ball altitude at time t")
    print("    n time shift (greater than or equal to zero, integer")

def calc_vector(x0, y0, z0, x1, y1, z1):
    vector = [x1 - x0, y1 - y0, z1 - z0]
    print("The velocity vector of the ball is:")
    print(f"({vector[0]:.2f}, {vector[1]:.2f}, {vector[2]:.2f})")
    return vector

def calc_coordinates_timeshift(vector, x1, y1, z1, n):
    coordinates = [n * vector[0] + x1, n * vector[1] + y1, n * vector[2] + z1]
    print(f"At time t + {n}, ball coordinates will be:")
    print(f"({coordinates[0]:.2f}, {coordinates[1]:.2f}, {coordinates[2]:.2f})")
    return

def calc_angle(vector, z1, n):
    speed = sqrt(pow(vector[0], 2) + pow(vector[1], 2) + pow(vector[2], 2))
    if speed == 0 or (z1 < 0 and vector[2] < 0) or (z1 >= 0 and vector[2] >= 0):
        print("The ball won't reach the paddle.")
    else:
        angle = abs(90 - degrees(acos(vector[2] / speed)))
        print(f"The incidence angle is:\n{angle:.2f} degrees")
    return

def main():
    if len(argv) != 8:
        if len(argv) == 2 and argv[1] == "-h":
            print_help()
            return 0
        print("Incorrect number of arguments\nMore help: \"./101pong -h\"")
        return 84

    try:
        x0 = float(argv[1])
        y0 = float(argv[2])
        z0 = float(argv[3])
        x1 = float(argv[4])
        y1 = float(argv[5])
        z1 = float(argv[6])
        n = int(argv[7])
    except ValueError:
        print("Arguments must be numbers\nMore help: \"./101pong -h\"")
        return 84

    if n < 0:
        print("Time shift must be greater than or equal to zero\nMore help: \"./101pong -h\"")
        return 84

    vector = calc_vector(x0, y0, z0, x1, y1, z1)
    calc_coordinates_timeshift(vector, x1, y1, z1, n)
    calc_angle(vector, z1, n)
    return 0

if __name__ == "__main__":
    exit(main())
